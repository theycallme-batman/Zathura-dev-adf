{
	"name": "SQLServer-to-adls",
	"properties": {
		"activities": [
			{
				"name": "Get tables to load",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select QUOTENAME(schema_name) as schema_name,\nQUOTENAME(table_name) as table_name,\nlast_writtentimestamp as last_writtentimestamp\nfrom support.controlrunparams\n",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzureSqlConnect_DS",
						"type": "DatasetReference",
						"parameters": {
							"Sql_connectionstring": {
								"value": "@pipeline().parameters.Sql_connectionstring",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Run for each table",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get tables to load",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get tables to load').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "get_loadtimestamp",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "@concat('Select coalesce(max(load_timestamp),''','1900-01-02 00:00:00','''',') as load_timestamp from ',item().table_name)",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "AzureSqlConnect_DS",
									"type": "DatasetReference",
									"parameters": {
										"Sql_connectionstring": {
											"value": "@pipeline().parameters.Sql_connectionstring",
											"type": "Expression"
										}
									}
								}
							}
						},
						{
							"name": "cmp_load-written_Timestamp",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "get_loadtimestamp",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@greater(string(activity('get_loadtimestamp').output.firstRow.load_timestamp),string(item().last_writtentimestamp))",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "SQLServer to ADLS",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureSqlSource",
												"sqlReaderQuery": {
													"value": "@concat('SELECT * FROM ',item().schema_name,'.',item().table_name,' WHERE coalesce(load_timestamp, ''','1900-01-02','''',') > ''',item().last_writtentimestamp, '''')",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"sink": {
												"type": "ParquetSink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												},
												"formatSettings": {
													"type": "ParquetWriteSettings",
													"maxRowsPerFile": 100
												}
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "AzureSqlConnect_DS",
												"type": "DatasetReference",
												"parameters": {
													"Sql_connectionstring": {
														"value": "@pipeline().parameters.Sql_connectionstring",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "Parquet1",
												"type": "DatasetReference",
												"parameters": {
													"adls_url": {
														"value": "@pipeline().parameters.adls_url",
														"type": "Expression"
													},
													"table_name": {
														"value": "@string(item().table_name)",
														"type": "Expression"
													},
													"source": {
														"value": "@pipeline().parameters.source",
														"type": "Expression"
													}
												}
											}
										]
									},
									{
										"name": "update_controlrunparams",
										"type": "Lookup",
										"dependsOn": [
											{
												"activity": "SQLServer to ADLS",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureSqlSource",
												"sqlReaderQuery": {
													"value": "@concat('update support.controlrunparams set last_writtentimestamp = ''',activity('get_loadtimestamp').output.firstRow.load_timestamp,'''',' where table_name = ''',replace(replace(item().table_name,'[',''),']',''),'''','; Select 1 as abc')",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"dataset": {
												"referenceName": "AzureSqlConnect_DS",
												"type": "DatasetReference",
												"parameters": {
													"Sql_connectionstring": {
														"value": "@pipeline().parameters.Sql_connectionstring",
														"type": "Expression"
													}
												}
											}
										}
									}
								]
							}
						}
					]
				}
			}
		],
		"parameters": {
			"Sql_connectionstring": {
				"type": "string",
				"defaultValue": "sql-connection"
			},
			"adls_url": {
				"type": "string",
				"defaultValue": "https://devzathura.dfs.core.windows.net/"
			},
			"source": {
				"type": "string",
				"defaultValue": "SQLServer"
			}
		},
		"annotations": []
	}
}